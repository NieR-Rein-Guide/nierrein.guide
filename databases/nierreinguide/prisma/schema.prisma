generator client {
  provider = "prisma-client-js"
  output   = "../../../node_modules/@prisma/client-nrg"
}

datasource db {
  provider = "postgresql"
  url      = env("NIERREINGUIDE_DATABASE_URL")
}

model loadout_slots {
  id            Int      @id @default(autoincrement())
  loadoutId     Int
  slot_position Int
  costume_id    Int?
  weapon_1_id   Int?
  weapon_2_id   Int?
  weapon_3_id   Int?
  companion_id  Int?
  debris_id     Int?
  memoir_1_id   Int?
  memoir_2_id   Int?
  memoir_3_id   Int?
  loadouts      loadouts @relation(fields: [loadoutId], references: [loadout_id])
}

model loadouts {
  loadout_id    Int             @id @default(autoincrement())
  title         String
  description   String?
  type          String          @default(dbgenerated("'quests'::bpchar"))
  created_at    DateTime?       @db.Timestamptz(6)
  slug          String
  attribute     String
  votes         Int?            @default(0)
  loadout_slots loadout_slots[]
}

model tierlists {
  tierlist_id Int       @id @default(autoincrement())
  title       String
  description String?
  type        String    @default(dbgenerated("'costumes'::bpchar"))
  created_at  DateTime? @db.Timestamptz(6)
  slug        String
  attribute   String
  votes       Int?      @default(0)
  updated_at  DateTime? @db.Timestamptz(6)
  edit_key    String
  tiers       tiers[]
}

model tiers {
  id          Int           @id @default(autoincrement())
  tierlist_id Int
  tier        String
  position    Int
  description String?
  tierslists  tierlists     @relation(fields: [tierlist_id], references: [tierlist_id], onDelete: Cascade)
  tiers_items tiers_items[]
}

model tiers_items {
  id                   Int      @id @default(autoincrement())
  tier_id              Int
  item_id              Int
  position             Int
  tooltip              String?
  tooltip_is_important Boolean?
  tiers                tiers    @relation(fields: [tier_id], references: [id], onDelete: Cascade)
}

model inventories {
  id        Int  @id @default(autoincrement())
  inventory Json
}

model notification {
  notification_id  Int       @id(map: "pk_notification") @default(autoincrement())
  information_type String?
  title            String?
  body             String?
  release_time     DateTime? @db.Timestamptz(6)
  thumbnail_path   String?
}

model costumes_link {
  costume_id Int  @id @default(autoincrement())
  weapon_id  Int?
  debris_id  Int?
}
